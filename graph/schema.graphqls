enum Roles {
    Customer
    Administrator
}

type User {
    id: ID!
    email: String!
    name: String!
    surname: String!
    gender: String!
    date: String!
    role: Roles!
}

type Product {
    id: ID!
    name: String!
    description: String!
    photo: String!
    file: String!
    price: Float!
}

type Comment {
    id: ID!
    userid: ID!
    date: String!
    productid: ID!
    content: String!
}

input NewProduct {
    name: String!
    description: String!
    photo: String!
    file: String!
    price: Float!
}

type Query {
    search(name: String, categories: String, lower_price: Float, highest_price: Float): [Product!]!
    product(id: Int!): Product!
    comments(productid: Int!, from: Int, count: Int): [Comment!]!

    register(email: String!, name: String!, surname: String!, gender: String!, password: String!): Boolean!
    login(email: String!, password: String!): Boolean!

    CartAdd(productid: Int!, count: Int!): Boolean!
    CartRemove(cartid: Int!, count: Int!): Boolean!
    CartInspect(cartid: Int!): Product!
    CartPurchase: Boolean!

    ProfileGet: User!
    ProfileUpdate(email: String, name: String, surname: String, gender: String, password: String): User!

    History: [Product!]

    CommentAdd(content: String!, productid: Int!): Boolean!
    CommentRemove(commentid: Int!): Boolean!
    CommentUpdate(commentid: Int!): Boolean!

    StoreAdd(product: NewProduct!): Boolean!
    StoreRemove(productid: Int!): Boolean!
    StoreUpdate(productid: Int!, product: NewProduct!): Boolean!
}
